<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2006 The Android Open Source Project
         Licensed under the Apache License, Version 2.0 (the "License");
         you may not use this file except in compliance with the License.
         You may obtain a copy of the License at
              http://www.apache.org/licenses/LICENSE-2.0
         Unless required by applicable law or agreed to in writing, software
         distributed under the License is distributed on an "AS IS" BASIS,
         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         See the License for the specific language governing permissions and
         limitations under the License.
    -->
<!-- Formatting note: terminate all comments with a period, to avoid breaking
         the documentation output. To suppress comment lines from the documentation
         output, insert an eat-comment element after the comment lines.
    -->
<resources>
    <!-- If set, specifies the color to apply to the drawable as a tint. By default,
         no tint is applied. May be a color state list. -->
    <attr name="tint_" />
    <!-- When a tint color is set, specifies its Porter-Duff blending mode. The
         default value is src_in, which treats the drawable as an alpha mask. -->
    <attr name="tintMode_">
        <!-- The tint is drawn on top of the drawable.
             [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
        <enum name="src_over" value="3" />
        <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
             color channels are thrown out. [Sa * Da, Sc * Da] -->
        <enum name="src_in" value="5" />
        <!-- The tint is drawn above the drawable, but with the drawable’s alpha
             channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
        <enum name="src_atop" value="9" />
        <!-- Multiplies the color and alpha channels of the drawable with those of
             the tint. [Sa * Da, Sc * Dc] -->
        <enum name="multiply" value="14" />
        <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
        <enum name="screen" value="15" />
        <!-- Combines the tint and drawable color and alpha channels, clamping the
             result to valid color values. Saturate(S + D) -->
        <enum name="add" value="16" />
    </attr>
    <!-- Indicates if the drawable needs to be mirrored when its layout direction is
         RTL (right-to-left). -->
    <attr name="autoMirrored" />

    <attr name="fillType" format="enum">
        <enum name="winding" value="0" />
        <enum name="even_odd" value="1" />
    </attr>


    <!-- ========================== -->
    <!--   VectorDrawable class   -->
    <!-- ========================== -->
    <eat-comment />
    <!-- Drawable used to draw vector paths. -->
    <declare-styleable name="VectorDrawable">
        <!-- If set, specifies the color to apply to the drawable as a tint. By default,
                 no tint is applied. May be a color state list. -->
        <attr name="tint_" />
        <!-- When a tint color is set, specifies its Porter-Duff blending mode. The
                 default value is src_in, which treats the drawable as an alpha mask. -->
        <attr name="tintMode_" />
        <!-- Indicates if the drawable needs to be mirrored when its layout direction is
                 RTL (right-to-left). -->
        <attr name="autoMirrored" />
        <!-- The intrinsic width of the Vector Drawable. -->
        <attr name="android:width" />
        <!-- The intrinsic height of the Vector Drawable. -->
        <attr name="android:height" />
        <!-- The width of the canvas the drawing is on. -->
        <attr name="viewportWidth" format="float" />
        <!-- The height of the canvas the drawing is on. -->
        <attr name="viewportHeight" format="float" />
        <!-- The name of this vector drawable -->
        <attr name="android:name" />
        <!-- The opacity of the whole vector drawable, as a value between 0
                 (completely transparent) and 1 (completely opaque). -->
        <attr name="android:alpha" />
        <!-- Left optical inset.
             @hide Until optical insets are fully supported. -->
        <attr name="opticalInsetLeft" format="dimension" />
        <!-- Top optical inset.
             @hide Until optical insets are fully supported. -->
        <attr name="opticalInsetTop" format="dimension" />
        <!-- Right optical inset.
             @hide Until optical insets are fully supported. -->
        <attr name="opticalInsetRight" format="dimension" />
        <!-- Bottom optical inset.
             @hide Until optical insets are fully supported. -->
        <attr name="opticalInsetBottom" format="dimension" />
    </declare-styleable>
    <!-- Defines the group used in VectorDrawables. -->
    <declare-styleable name="VectorDrawableGroup">
        <!-- The name of this group -->
        <attr name="android:name" />
        <!-- The amount to rotate the group -->
        <attr name="android:rotation" />
        <!-- The X coordinate of the center of rotation of a group -->
        <attr name="android:pivotX" />
        <!-- The Y coordinate of the center of rotation of a group -->
        <attr name="android:pivotY" />
        <!-- The amount to translate the group on X coordinate -->
        <attr name="translateX" format="float" />
        <!-- The amount to translate the group on Y coordinate -->
        <attr name="translateY" format="float" />
        <!-- The amount to scale the group on X coordinate -->
        <attr name="android:scaleX" />
        <!-- The amount to scale the group on X coordinate -->
        <attr name="android:scaleY" />
    </declare-styleable>
    <!-- Defines the path used in VectorDrawables. -->
    <declare-styleable name="VectorDrawablePath">
        <!-- The name of this path -->
        <attr name="android:name" />
        <!-- The width a path stroke -->
        <attr name="strokeWidth" format="float" />
        <!-- The color to stroke the path if not defined implies no stroke-->
        <attr name="strokeColor" format="color" />
        <!-- The opacity of a path stroke, as a value between 0 (completely transparent)
                 and 1 (completely opaque) -->
        <attr name="strokeAlpha" format="float" />
        <!-- The color to fill the path if not defined implies no fill-->
        <attr name="fillColor" format="color" />
        <!-- The alpha of the path fill, as a value between 0 (completely transparent)
                 and 1 (completely opaque)-->
        <attr name="fillAlpha" format="float" />
        <!-- The specification of the operations that define the path  -->
        <attr name="pathData" format="string" />
        <!-- The fraction of the path to trim from the start from 0 to 1 -->
        <attr name="trimPathStart" format="float" />
        <!-- The fraction of the path to trim from the end from 0 to 1  -->
        <attr name="trimPathEnd" format="float" />
        <!-- Shift trim region (allows visible region to include the start and end) from 0 to 1  -->
        <attr name="trimPathOffset" format="float" />
        <!-- sets the linecap for a stroked path -->
        <attr name="strokeLineCap" format="enum">
            <enum name="butt" value="0" />
            <enum name="round" value="1" />
            <enum name="square" value="2" />
        </attr>
        <!-- sets the lineJoin for a stroked path -->
        <attr name="strokeLineJoin" format="enum">
            <enum name="miter" value="0" />
            <enum name="round" value="1" />
            <enum name="bevel" value="2" />
        </attr>
        <!-- sets the Miter limit for a stroked path -->
        <attr name="strokeMiterLimit" format="float" />
        <attr name="fillType" />
    </declare-styleable>
    <!-- Defines the clip path used in VectorDrawables. -->
    <declare-styleable name="VectorDrawableClipPath">
        <!-- The Name of this path -->
        <attr name="android:name" />
        <!-- The specification of the operations that define the path  -->
        <attr name="pathData" />
        <attr name="fillType" />
    </declare-styleable>
</resources>
